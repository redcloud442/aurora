name: Docker Image CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image with envs
        run: |
          docker build \
              --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
              --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
              --build-arg NEXT_PUBLIC_TURSTILE_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURSTILE_SITE_KEY }} \
              --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -t ghcr.io/redcloud442/aurora:prod-${SHORT_SHA} .

      - name: Push Docker image
        run: docker push ghcr.io/redcloud442/aurora:prod-${SHORT_SHA}

      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v3
      #   with:
      #     version: "v1.25.4"

      # - name: Create kubeconfig
      #   run: |
      #     mkdir -p $HOME/.kube
      #     echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      # - name: Show current Kubernetes context
      #   run: |
      #     kubectl config current-context
      #     kubectl cluster-info

      # - name: Confirm deployment and container name
      #   run: |
      #     kubectl get deployment -n aurora
      #     kubectl get deployment aurora-fe -n aurora -o jsonpath="{.spec.template.spec.containers[*].name}"

      # - name: Check RBAC permissions
      #   run: |
      #     kubectl auth can-i update deployment -n aurora

      # - name: Deploy to Kubernetes
      #   run: |
      #     echo "üöÄ Updating image in deployment 'aurora-fe'..."
      #     kubectl set image deployment/aurora-fe aurora-fe=ghcr.io/redcloud442/aurora:prod-${SHORT_SHA} -n aurora

      #     echo "‚è≥ Waiting for rollout to complete..."
      #     kubectl rollout status deployment/aurora-fe -n aurora
