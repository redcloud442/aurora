version: "3.8"
services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=adminuser@greenful.website"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
  ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
  volumes:
    - letsencrypt:/letsencrypt
    - /var/run/docker.sock:/var/run/docker.sock
  red-app:
    image: ghcr.io/redcloud442/red:prod
    secrets:
      - red-app-stack_red_app_env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.red-app.rule=Host(`greenful.website`)"
      - "traefik.http.routers.red-app.entrypoints=websecure"
      - "traefik.http.routers.red-app.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - /run/secrets/red-app-stack_red_app_env
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
    restart: always

volumes:
  letsencrypt:
secrets:
  red_app_env:
    external: true
